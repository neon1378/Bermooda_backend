# Generated by Django 5.1.6 on 2025-04-12 04:37

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('CalenderManager', '0001_initial'),
        ('WorkSpaceManager', '0045_workspace_plan_started_date'),
        ('core', '0007_appupdate'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Meeting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this record is soft deleted', verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when this record was soft deleted', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated At')),
                ('reaped_type', models.CharField(choices=[('weekly', 'WEEKLY'), ('daily', 'DAILY'), ('monthly', 'MONTHLY'), ('no_repetition', 'No Repetition')], max_length=100, null=True)),
                ('date_to_start', models.DateTimeField(blank=True, null=True)),
                ('title', models.CharField(max_length=200, null=True)),
                ('remember_type', models.CharField(blank=True, choices=[('hour', 'HOUR'), ('minute', 'MINUTE'), ('day', 'day')], max_length=80, null=True)),
                ('remember_number', models.IntegerField(default=0)),
                ('reaped_status', models.BooleanField(default=False)),
                ('description', models.TextField(blank=True, null=True)),
                ('more_information', models.BooleanField(default=False)),
                ('link', models.CharField(blank=True, max_length=500, null=True)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('files', models.ManyToManyField(to='core.mainfile')),
                ('workspace', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='WorkSpaceManager.workspace')),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='MeetingEmail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, null=True)),
                ('meeting', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meeting_emails', to='CalenderManager.meeting')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingHashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=70, null=True)),
                ('meeting', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meeting_hashtags', to='CalenderManager.meeting')),
            ],
        ),
        migrations.CreateModel(
            name='MeetingMembers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_type', models.CharField(choices=[('owner', 'OWNER'), ('member', 'OWNER')], max_length=12, null=True)),
                ('activated', models.BooleanField(default=False)),
                ('meeting', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='members', to='CalenderManager.meeting')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='MeetingPhoneNumber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=100, null=True)),
                ('meeting', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='meeting_phone_numbers', to='CalenderManager.meeting')),
            ],
        ),
        migrations.CreateModel(
            name='MetingLabel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_deleted', models.BooleanField(default=False, help_text='Designates whether this record is soft deleted', verbose_name='Is Deleted')),
                ('deleted_at', models.DateTimeField(blank=True, help_text='Date and time when this record was soft deleted', null=True, verbose_name='Deleted At')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True, verbose_name='Created At')),
                ('updated_at', models.DateTimeField(auto_now=True, null=True, verbose_name='Updated At')),
                ('title', models.CharField(max_length=20, null=True)),
                ('color_code', models.CharField(max_length=12, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
                'abstract': False,
                'indexes': [models.Index(fields=['is_deleted'], name='CalenderMan_is_dele_420851_idx'), models.Index(fields=['deleted_at'], name='CalenderMan_deleted_745b08_idx')],
            },
        ),
        migrations.AddField(
            model_name='meeting',
            name='label',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='CalenderManager.metinglabel'),
        ),
        migrations.DeleteModel(
            name='MeetingPlan',
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['is_deleted'], name='CalenderMan_is_dele_ca5a86_idx'),
        ),
        migrations.AddIndex(
            model_name='meeting',
            index=models.Index(fields=['deleted_at'], name='CalenderMan_deleted_28da67_idx'),
        ),
    ]
